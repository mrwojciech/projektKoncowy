# Konfiguruje prefix i sufiks dla stron JSP, tak jak byśmy to robili w naszym WebConfig
# Dodatkowo w IntelliJ należy skonfigurować tzw. Web Facet czyli:
# File -> Project Structure -> Facets -> Web
# W sekcji Web Resources Directories dodać ściężkę do katalogu src/main/webapp
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp

# Konfiguracja katagorii logerów, nie potrzeba osobnego pliku z konfiguracją loggera
logging.level.sql=DEBUG
logging.level.root=WARN
logging.level.com.example.springboot=DEBUG

# Konfiguracja połączenia z bazą danych i ustawień JPA/Hibernate
# Zastępuje nam plik persistence.xml i klasę konfiguracyjną DbConfig
spring.datasource.url=jdbc:mysql://localhost:3306/bookStore?serverTimezone=UTC
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=coderslab
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
# Wyłącza automatyczne otwieranie transakcji przy każdym żądaniu
spring.jpa.open-in-view=false

# Włącza domyślną obsługę zasobów statycznych przez Tomcata
# co znaczy, że pliki CSS, obrazki, JS itd mogą być umieszczone
# w katalogu webapp
# Alternatywnie można tego nie używać i umieszczać je w katalogu resources/static
server.servlet.register-default-servlet=true

# Konfiguracja security z domyślnym użytkownikiem
spring.security.user.name=user
spring.security.user.password=pass
spring.security.user.roles=USER
